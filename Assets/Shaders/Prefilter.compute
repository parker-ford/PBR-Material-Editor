#pragma kernel CSMain

#include "UnityCG.cginc"
#include "UnityCG.cginc"
#include "./ParkerUtils.cginc"
#include "./ParkerUtils.cginc"

RWTexture2D<float4> _FilteredMap;
Texture2D<float4> _EnvironmentMap;
SamplerState sampler_EnvironmentMap;
float _MipMapLevel;

float _Width;
float _Height;
int _Samples;

float3 random_pcg3d(uint3 v) {
    v = v * 1664525u + 1013904223u;
    v.x += v.y * v.z;
    v.y += v.z * v.x;
    v.z += v.x * v.y;

    v ^= v >> 16u;
    v.x += v.y * v.z;
    v.y += v.z * v.x;
    v.z += v.x * v.y;

    return float3(v) * (1.0 / float(0xffffffffu));
}

float3x3 getTBNMatrix(float3 normal){
    float3 someVec = float3(1.0, 0.0, 0.0);
    float dd = dot(someVec, normal);
    float3 tangent = float3(0.0, 1.0, 0.0);
    if(1.0 - abs(dd) > 0.00001){
        tangent = normalize(cross(someVec, normal));
    }
    float3 bitangent = cross(normal, tangent);
    return float3x3(tangent, bitangent, normal);
}

float3 prefilterEnvironmentMapDiffuse_compute(Texture2D<float4> environmentMap, SamplerState samplerState, uint2 id, float2 size){
    float2 uv = float2(pixelToTexture(id.x, size.x), pixelToTexture(id.y, size.y));

    float3 normal = textureToSphericalDirection(uv);
    float3x3 tbn = getTBNMatrix(normal);
    float3 result = 0;

    uint N = uint(_Samples);
    for(uint n = 0u; n < N; n++){
        float3 random = random_pcg3d(uint3(id, n));
        float phi = 2.0 * PI * random.x;
        float theta = asin(sqrt(random.y));
        float3 localPos = float3(sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta));
        float3 worldPos = mul(localPos, tbn);
        float2 samplePos = directionToSphericalTexture(worldPos);
        float3 sample = gammaToLinear(environmentMap.SampleLevel(samplerState, samplePos, _MipMapLevel).rgb);
        result += sample;
    }
    result = result / float(N);
    return result;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float3 color = prefilterEnvironmentMapDiffuse_compute(_EnvironmentMap, sampler_EnvironmentMap, id.xy, float2(_Width, _Height));
    _FilteredMap[id.xy] = float4(color, 1.0);
}
